/**
 * Configura√ß√£o do WPPConnect-Server
 *
 * Este arquivo controla o comportamento do servidor que mant√©m a sess√£o do WhatsApp via Chromium.
 * Recomenda√ß√µes:
 * - Em produ√ß√£o, troque `secretKey`, ajuste `host/port` e reduza `log.level` para "info" ou "warn".
 * - Defina `tokenStoreType` e `db` conforme o tipo de armazenamento de sess√µes/tokens.
 * - Se for usar Webhook (recebimento de mensagens/eventos), preencha `webhook.url`.
 * - Em containers, mantenha `--no-sandbox`/`--disable-dev-shm-usage` nos `browserArgs`.
 */

import { ServerOptions } from './types/ServerOptions';

export default {
  /** Chave usada para assinar/validar requisi√ß√µes ao servidor (autentica√ß√£o/API). Troque em produ√ß√£o. */
  secretKey: 'THISISMYSECURETOKEN',

  /** Host onde o servidor HTTP escuta (use 0.0.0.0 em containers/VPS). */
  host: 'http://localhost',

  /** Porta do servidor HTTP. */
  port: '21465',

  /** Nome do ‚Äúdispositivo‚Äù apresentado pelo cliente WhatsApp (identifica√ß√£o da sess√£o). */
  deviceName: 'WppConnect',

  /** Valor enviado no header "X-Powered-By". Apenas informativo. */
  poweredBy: 'WPPConnect-Server',

  /**
   * Se true, ao iniciar o processo o servidor tenta subir TODAS as sess√µes j√° existentes no storage.
   * √ötil para manter sess√µes reconectadas ap√≥s restart.
   */
  startAllSession: true,

  /**
   * Onde armazenar os tokens/sess√µes:
   * - 'file'  -> disco local (padr√£o simples, bom para 1 VPS)
   * - 'redis' -> usa Redis (multi-inst√¢ncia, melhor para horizontalizar)
   * - 'mongodb' -> usa MongoDB (persist√™ncia centralizada)
   */
  tokenStoreType: 'file',

  /** Limite de listeners do EventEmitter (evita warning "MaxListenersExceededWarning"). */
  maxListeners: 15,

  /**
   * Diret√≥rio para dados do usu√°rio/Chromium (perfil do navegador).
   * Mant√™-lo persistente ajuda a reduzir re-login/QR a cada rein√≠cio.
   */
  customUserDataDir: './userDataDir/',

  /** Configura√ß√µes de Webhook (envio de eventos/mensagens para sua aplica√ß√£o). */
  webhook: {
    /**
     * URL do seu endpoint para receber eventos (mensagens, status, acks, etc.).
     * Ex.: 'https://api.seudominio.com/admin/bot/api/wpp/webhook'
     * Deixe null se n√£o for usar webhooks.
     */
    url: null,

    /** Se true, faz download autom√°tico de m√≠dias recebidas antes de enviar ao webhook. */
    autoDownload: true,

    /** Se true e S3 configurado, sobe m√≠dias para S3 e envia no webhook o link p√∫blico. */
    uploadS3: false,

    /** Se true, marca mensagens como lidas automaticamente ap√≥s recebidas. */
    readMessage: true,

    /** Se true, na inicializa√ß√£o busca e dispara webhooks para mensagens ‚Äún√£o lidas‚Äù. Cuidado com volume. */
    allUnreadOnStart: false,

    /** Se true, envia webhook quando chegam confirma√ß√µes (ack) de envio/leitura. */
    listenAcks: true,

    /** Se true, envia webhook quando a presen√ßa (digitando/online/offline) de um contato muda. */
    onPresenceChanged: true,

    /** Se true, envia webhook quando participantes de um grupo entram/saem/s√£o alterados. */
    onParticipantsChanged: true,

    /** Se true, envia webhook para rea√ß√µes a mensagens (üëç‚ù§Ô∏è etc.). */
    onReactionMessage: true,

    /** Se true, envia webhook para respostas de enquetes (polls). */
    onPollResponse: true,

    /** Se true, envia webhook quando uma mensagem √© revogada/apagada. */
    onRevokedMessage: true,

    /** Se true, envia webhook quando labels (etiquetas) s√£o atualizadas. */
    onLabelUpdated: true,

    /** Se true, N√ÉO envia webhook para mensagens que voc√™ mesmo enviou (eco). */
    onSelfMessage: false,

    /**
     * Lista de IDs/JIDs a ignorar (n√£o dispara webhook).
     * 'status@broadcast' ignora os status do WhatsApp.
     */
    ignore: ['status@broadcast'],
  },

  /** Configura√ß√µes de WebSocket (se voc√™ exp√µe eventos tamb√©m via WS para clientes). */
  websocket: {
    /** Download autom√°tico de m√≠dias para eventos transmitidos por WebSocket. */
    autoDownload: false,

    /** Upload autom√°tico para S3 de m√≠dias disparadas via WebSocket (se configurado). */
    uploadS3: false,
  },

  /** Integra√ß√£o com Chatwoot (se voc√™ usa esse helpdesk). */
  chatwoot: {
    /** Envia QRCode para o Chatwoot quando dispon√≠vel. */
    sendQrCode: true,

    /** Envia status da sess√£o para o Chatwoot (conectado, desconectado, etc.). */
    sendStatus: true,
  },

  /** Regras de arquivamento autom√°tico de conversas. */
  archive: {
    /** Ativa/desativa o arquivamento autom√°tico. */
    enable: false,

    /**
     * Tempo de espera (em segundos) antes de arquivar ap√≥s a √∫ltima atividade/checagem.
     * √ötil para n√£o arquivar imediatamente em cen√°rios com picos.
     */
    waitTime: 10,

    /** Dias sem atividade a partir dos quais a conversa ser√° arquivada. */
    daysToArchive: 45,
  },

  /** Configura√ß√£o de logs do servidor. */
  log: {
    /**
     * N√≠vel de log:
     * 'error' | 'warn' | 'info' | 'verbose' | 'debug' | 'silly'
     * Use 'silly' apenas para depura√ß√£o; em produ√ß√£o, prefira 'info'/'warn'.
     */
    level: 'silly', // Before open a issue, change level to silly and retry a action

    /** Destinos do log: 'console' e/ou 'file'. */
    logger: ['console', 'file'],
  },

  /** Op√ß√µes de cria√ß√£o da sess√£o/Chromium. */
  createOptions: {
    /**
     * Flags de inicializa√ß√£o do Chromium (via puppeteer/playwright).
     * Muitas delas reduzem consumo, desativam cache/recursos e melhoram compatibilidade em containers.
     * OBS: h√° flags duplicadas (ex.: --disable-web-security) ‚Äî √© inofensivo, pode manter.
     * Cuidado: ignorar certificados SSL √© conveniente em dev, mas n√£o recomendado em produ√ß√£o.
     */
    browserArgs: [
      '--disable-web-security',
      '--no-sandbox',
      '--disable-web-security', // duplicada, sem impacto pr√°tico
      '--aggressive-cache-discard',
      '--disable-cache',
      '--disable-application-cache',
      '--disable-offline-load-stale-cache',
      '--disk-cache-size=0',
      '--disable-background-networking',
      '--disable-default-apps',
      '--disable-extensions',
      '--disable-sync',
      '--disable-dev-shm-usage',
      '--disable-gpu',
      '--disable-translate',
      '--hide-scrollbars',
      '--metrics-recording-only',
      '--mute-audio',
      '--no-first-run',
      '--safebrowsing-disable-auto-update',
      '--ignore-certificate-errors',
      '--ignore-ssl-errors',
      '--ignore-certificate-errors-spki-list',
    ],

    /**
     * Servidores para gerar link preview (metadados OpenGraph/etc.) de forma confi√°vel.
     * 'null' = usar servidores globais padr√£o.
     * Para controle total, voc√™ pode hospedar seu pr√≥prio `wa-js-api-server` (com SSL) e informar aqui.
     * Ex.: linkPreviewApiServers: [ 'https://www.seudominio.com/wa-js-api-server' ]
     */
    linkPreviewApiServers: null,
  },

  /**
   * Mapper √© um mecanismo opcional para normalizar/rotular dados conforme integra√ß√µes externas.
   * Quando habilitado, o `prefix` √© aplicado nos identificadores/labels mapeados.
   */
  mapper: {
    /** Ativa o mapper. */
    enable: false,

    /** Prefixo aplicado em elementos mapeados (tags/labels/etc.). */
    prefix: 'tagone-',
  },

  /** Configura√ß√£o de bancos/cache usados pelo servidor. */
  db: {
    /** Nome do database MongoDB para tokens (se tokenStoreType = 'mongodb'). */
    mongodbDatabase: 'tokens',

    /** Nome da cole√ß√£o (opcional). */
    mongodbCollection: '',

    /** Credenciais de acesso ao Mongo (se necess√°rio). */
    mongodbUser: '',
    mongodbPassword: '',

    /** Host/porta do Mongo. */
    mongodbHost: '',
    mongoIsRemote: true,
    mongoURLRemote: '', // pode usar string de conex√£o completa (ex.: Mongo Atlas)
    mongodbPort: 27017,

    /** Configura√ß√£o do Redis (se usar Redis para cache/filas/session store). */
    redisHost: 'localhost',
    redisPort: 6379,
    redisPassword: '',
    redisDb: 0,

    /** Prefixo para chaves no Redis (√∫til para multi-ambiente). */
    redisPrefix: 'docker',
  },

  /** Configura√ß√£o de upload para Amazon S3 (quando uploadS3 = true). */
  aws_s3: {
    /** Regi√£o do bucket (ex.: 'sa-east-1' = S√£o Paulo). */
    region: 'sa-east-1' as any,

    /** Credenciais de acesso (defina via vari√°vel de ambiente em produ√ß√£o). */
    access_key_id: null,
    secret_key: null,

    /** Nome do bucket padr√£o para upload. */
    defaultBucketName: null,

    /** Endpoint custom (S3 compat√≠vel como MinIO, Wasabi, etc.). */
    endpoint: null,

    /** For√ßa estilo de path no endpoint (√∫til para compatibilidade com S3 alternativos). */
    forcePathStyle: null,
  },
} as unknown as ServerOptions;
